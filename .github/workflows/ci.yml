name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  check_formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
        components: rustfmt
    - name: Check Formatting
      run: cargo +stable fmt --all -- --check

  filter:
    name: Filter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2.10.2
      id: filter
      with:
        filters: |
          cross-platform:
            - 'src/platform/mod.rs'
            - 'src/platform_impl/mod.rs'
            - 'src/*.rs'
            - 'build.rs'
            - 'examples/*.rs'
            - 'tests/*.rs'
            - '*.toml'
            - '.github/workflows/ci.yml'
          run_return:
            - 'src/platform/run_return.rs'
          windows:
            - 'src/platform/windows.rs'
            - 'src/platform_impl/windows/**'
            - 'src/platform/run_return.rs'
          linux:
            - 'src/platform/unix.rs'
            - 'src/platform_impl/linux/**'
            - 'src/platform/run_return.rs'
          android:
            - 'src/platform/android.rs'
            - 'src/platform_impl/android/**'
            - 'src/platform/run_return.rs'
          macos:
            - 'src/platform/macos.rs'
            - 'src/platform_impl/macos/**'
            - 'src/platform/run_return.rs'
          ios:
            - 'src/platform/ios.rs'
            - 'src/platform_impl/ios/**'
          wasm:
            - 'src/platform/web.rs'
            - 'src/platform_impl/web/**'
    outputs:
      cross-platform: ${{ steps.filter.cross-platform }}
      windows: ${{ steps.filter.windows || steps.filter.run_return }}
      linux:   ${{ steps.filter.linux   || steps.filter.run_return }}
      android: ${{ steps.filter.android || steps.filter.run_return }}
      macos:   ${{ steps.filter.macos   || steps.filter.run_return }}
      ios:  ${{ steps.filter.ios  }}
      wasm: ${{ steps.filter.wasm }}

  run_tests:
    name: Run tests
    needs: [filter]
    strategy:
      matrix:
        rust_version: [stable, nightly]
        platform:
          - { target: x86_64-pc-windows-msvc,   os: windows-latest }
          - { target: i686-pc-windows-msvc,     os: windows-latest }
          - { target: x86_64-pc-windows-gnu,    os: windows-latest, host: -x86_64-pc-windows-gnu }
          - { target: i686-pc-windows-gnu,      os: windows-latest, host: -i686-pc-windows-gnu }
          - { target: i686-unknown-linux-gnu,   os: ubuntu-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, options: --no-default-features, features: x11 }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, options: --no-default-features, features: "wayland,wayland-dlopen" }
          - { target: aarch64-linux-android,    os: ubuntu-latest, cmd: 'apk --' }
          - { target: x86_64-apple-darwin,      os: macos-latest }
          - { target: x86_64-apple-ios,         os: macos-latest }
          - { target: aarch64-apple-ios,        os: macos-latest }
          # We're using Windows rather than Ubuntu to run the wasm tests because caching cargo-web
          # doesn't currently work on Linux.
          - { target: wasm32-unknown-unknown,   os: windows-latest }
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run platform tests
#      if: ${{ (needs.Tests.outputs.cross-platform
#                || ( (needs.Tests.outputs.windows && contains(matrix.platform.target, 'windows'))
#                  || (needs.Tests.outputs.linux   && contains(matrix.platform.target, 'linux-gnu'))
#                  || (needs.Tests.outputs.android && contains(matrix.platform.target, 'android'))
#                  || (needs.Tests.outputs.macos   && contains(matrix.platform.target, 'apple-darwin'))
#                  || (needs.Tests.outputs.ios     && contains(matrix.platform.target, 'apple-ios'))
#                  || (needs.Tests.outputs.wasm    && contains(matrix.platform.target, 'wasm32'))
#                )
#           ) }}
      uses: ./.github/workflows/ci_per_platform.yml
      with:
        target:   ${{ matrix.platform.target   }}
        os:       ${{ matrix.platform.os       }}
        host:     ${{ matrix.platform.host     }}
        options:  ${{ matrix.platform.options  }}
        features: ${{ matrix.platform.features }}
        cmd:      ${{ matrix.platform.cmd      }}
